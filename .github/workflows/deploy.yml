name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main

jobs:
  deploy_lambda:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install Production Dependencies
        run: |
          cd api  # Only if your Lambda code is in the `api` folder
          npm install --production


      - name: Install Dependencies
        run: |
          cd api
          npm install --force
          npm install --save-dev \
            @types/passport \
            @types/express-session \
            @types/cors \
            @types/express \
            @types/aws-lambda \
            @types/aws-serverless-express \
            @types/lodash \
            @types/jsonwebtoken \
            @types/passport-google-oauth20

      - name: Generate Prisma Binaries
        run: |
          cd api  # Only if your Lambda code is in the `api` folder
          npx prisma generate

      - name: Split node_modules into Layers
        run: |
          cd api  # Only if your Lambda code is in the `api` folder
          chmod +x split-layers.sh
          ./split-layers.sh

      - name: Compile TypeScript
        run: |
          cd api  # Only if your Lambda code is in the `api` folder
          npm run build

      - name: Package and Deploy Application Code to AWS Lambda
        run: |
          cd api  # Only if your Lambda code is in the `api` folder
          zip -r deploy.zip dist/* package.json package-lock.json
          aws lambda update-function-code \
            --function-name schedsyncapi \
            --zip-file fileb://deploy.zip \
            --region ${{ secrets.AWS_REGION }}

      - name: Wait for Function Code Update to Complete
        run: |
          aws lambda wait function-updated \
            --function-name schedsyncapi \
            --region ${{ secrets.AWS_REGION }}

      - name: Attach Layers to Lambda Function
        run: |
          LAYERS=$(for ((i = 1; i <= $(ls -1 layers | wc -l); i++)); do
            echo -n "$(eval echo \$LAYER${i}_ARN) "
          done)
          aws lambda update-function-configuration \
            --function-name schedsyncapi \
            --layers $LAYERS \
            --region ${{ secrets.AWS_REGION }}